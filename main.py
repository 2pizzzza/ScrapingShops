from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from bs4 import BeautifulSoup
import time

MEN_URL = "https://en.zalando.de/mens-clothing/"


def create_driver():
    options = Options()
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--no-sandbox")
    options.add_argument("--headless")
    options.add_argument("--disable-dev-shm-usage")
    driver = webdriver.Chrome(options=options)
    return driver


def get_soup(url, delay=1):
    driver = create_driver()
    driver.get(url)
    time.sleep(delay)
    soup = BeautifulSoup(driver.page_source, "lxml")
    driver.quit()
    return soup


def get_categories(soup):
    categories = []
    ul = soup.select_one('ul._3ObVF2.m3OCL3._4oK5GO.-hyY7t ')
    if ul:
        for a in ul.select("a[href]"):
            href = a["href"]
            name = a.get_text(strip=True)
            if href.startswith("http"):
                categories.append({"name": name, "url": href})
    else:
        print("‚ùå –ë–ª–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return categories


def get_product_info(product_url):
    """–°–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ —Å –µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    soup = get_soup(product_url)

    # Title
    title_tag = soup.select_one("h1")
    title = title_tag.get_text(strip=True) if title_tag else ""

    # Description
    desc_tag = soup.select_one("div[itemprop='description'] p")
    description = desc_tag.get_text(strip=True) if desc_tag else ""

    # Category (–º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏–∑ —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫, –µ—Å–ª–∏ –µ—Å—Ç—å)
    cat_tag = soup.select("nav.breadcrumbs a")
    category = " > ".join([c.get_text(strip=True) for c in cat_tag]) if cat_tag else ""

    # Sizes
    size_tags = soup.select("button.size-selector")  # –ø—Ä–∏–º–µ—Ä, –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä
    sizes = [s.get_text(strip=True) for s in size_tags] if size_tags else []

    # Color
    color_tag = soup.select_one("div.color-selector img")
    color = color_tag.get("alt") if color_tag else ""

    # Price
    price_tag = soup.select_one("p span.price")  # –ø—Ä–∏–º–µ—Ä
    price = price_tag.get_text(strip=True) if price_tag else ""

    # Image URL
    img_tag = soup.select_one("img.product-image")
    img_url = img_tag.get("src") if img_tag else ""

    # Ref item / Shop ID / Sex (–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å—Ç–∞—Ç–∏—á–Ω–æ –∏–ª–∏ –≤—ã—Ç–∞—Å–∫–∏–≤–∞—Ç—å —Å —Å–∞–π—Ç–∞)
    ref_item = product_url.split("/")[-1].replace(".html", "")
    shop_id = "zalando"
    sex = "men"

    return {
        "title": title,
        "description": description,
        "category": category,
        "size": sizes,
        "color": color,
        "price": price,
        "img_url": img_url,
        "ref_item": ref_item,
        "shop_id": shop_id,
        "sex": sex,
        "url": product_url
    }


def get_products(cat_url):
    """–°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∏—Ö –¥–µ—Ç–∞–ª–∏"""
    soup = get_soup(cat_url)
    products = []

    ul = soup.select_one("ul.AnNemq._0xLoFW._7ckuOK.mROyo1")
    if not ul:
        print("‚ùå –ë–ª–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return products

    for li in ul.select("li.QjLAB7._75qWlu.iOzucJ"):
        a_tag = li.select_one("a[href]")
        if a_tag:
            product_url = a_tag["href"]
            if product_url.startswith("http"):
                info = get_product_info(product_url)
                products.append(info)

    return products


def main():
    soup = get_soup(MEN_URL)

    categories = get_categories(soup)
    print(f"üîπ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
    for c in categories:
        print(f"{c['name']} ‚Üí {c['url']}")

    if categories:
        first_cat = categories[1]  # –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤—Ç–æ—Ä—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        print(f"\nüîπ –°–±–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {first_cat['name']}")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        products = get_products(first_cat["url"])
        print(f"üîπ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}\n")

        # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 10 —Ç–æ–≤–∞—Ä–æ–≤
        for p in products[:10]:
            print("------")
            print(f"Title: {p['title']}")
            print(f"Description: {p['description']}")
            print(f"Category: {p['category']}")
            print(f"Sizes: {p['size']}")
            print(f"Color: {p['color']}")
            print(f"Price: {p['price']}")
            print(f"Image: {p['img_url']}")
            print(f"Ref item: {p['ref_item']}")
            print(f"Shop ID: {p['shop_id']}")
            print(f"Sex: {p['sex']}")
            print(f"URL: {p['url']}")


if __name__ == "__main__":
    main()
